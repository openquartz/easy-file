<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.openquartz.easyfile.server.mapper.AsyncFileRecordMapper">
    <resultMap id="BaseResultMap" type="com.openquartz.easyfile.server.entity.AsyncFileRecord">
        <id column="id" property="id"/>
        <result column="task_id" property="taskId"/>
        <result column="app_id" property="appId"/>
        <result column="executor_code" property="executorCode"/>
        <result column="handle_status" property="handleStatus"/>
        <result column="file_url" property="fileUrl"/>
        <result column="file_name" property="fileName"/>
        <result column="file_system" property="fileSystem"/>
        <result column="operate_by" property="operateBy"/>
        <result column="operate_name" property="operateName"/>
        <result column="remark" property="remark"/>
        <result column="notify_enable_status" property="notifyEnableStatus"/>
        <result column="notify_email" property="notifyEmail"/>
        <result column="max_server_retry" property="maxServerRetry"/>
        <result column="current_retry" property="currentRetry"/>
        <result column="download_num" property="downloadNum"/>
        <result column="execute_param" property="executeParam"/>
        <result column="error_msg" property="errorMsg"/>
        <result column="last_execute_time" property="lastExecuteTime"/>
        <result column="invalid_time" property="invalidTime"/>
        <result column="execute_process" property="executeProcess"/>
        <result column="version" property="version"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_by" property="createBy"/>
        <result column="update_by" property="updateBy"/>
        <result column="locale" property="locale"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,
        task_id,
        app_id,
        executor_code,
        handle_status,
        file_url,
        file_name,
        file_system,
        operate_by,
        operate_name,
        remark,
        notify_enable_status,
        notify_email,
        max_server_retry,
        current_retry,
        download_num,
        last_execute_time,
        invalid_time,
        execute_param,
        error_msg,
        execute_process,
        version,
        create_time,
        update_time,
        create_by,
        update_by,
        locale
    </sql>

    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ef_async_file_record
        where id = #{id}
    </select>

    <!--  变更上传信息-->
    <update id="changeUploadInfo" parameterType="com.openquartz.easyfile.server.mapper.condition.UploadInfoChangeCondition">
        update ef_async_file_record
            set handle_status = #{condition.uploadStatus.code},
        <if test="condition.fileUrl != null and condition.fileUrl != ''">
            file_url = #{condition.fileUrl},
        </if>
        <if test="condition.fileName!=null and condition.fileName!=''">
            file_name = #{condition.fileName},
        </if>
        <if test="condition.fileSystem != null">
            file_system = #{condition.fileSystem},
        </if>
        <if test="condition.errorMsg != null and condition.errorMsg != ''">
            error_msg = #{condition.errorMsg},
        </if>
        <if test="condition.lastExecuteTime != null">
            last_execute_time = #{condition.lastExecuteTime},
        </if>
        <if test="condition.invalidTime != null">
            invalid_time = #{condition.invalidTime},
        </if>
        version = version + 1
            where id = #{condition.id}
    </update>

    <select id="countTimeRange" resultType="java.lang.Integer">
        select count(*)
        from ef_async_file_record
        where app_id = #{condition.appId}
          AND executor_code = #{condition.downloadCode}
          AND create_time >= #{condition.minCreateTime}
    </select>

    <!--    查询可重试导出记录-->
    <select id="selectExportRecordOfRetryable" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ef_async_file_record
            WHERE last_execute_time >= #{condition.startTime}
              AND #{condition.endTime} > last_execute_time
              AND handle_status IN
        <foreach collection="condition.needRetryableStatusList" item="item" open="(" close=")" separator=","
            index="index">
            #{item.code}
        </foreach>
        AND max_server_retry > current_retry
            limit #{condition.limit}
    </select>

    <!--    重试信息-->
    <update id="updateRetryById">
        UPDATE ef_async_file_record
        SET last_execute_time = now(),
            current_retry     = current_retry + 1
        WHERE id = #{id}
          AND max_server_retry >= current_retry + 1
    </update>

    <update id="updateExecuteErrorMsg">
        UPDATE ef_async_file_record
        SET error_msg = #{errorMsg}
            WHERE id = #{id}
              AND handle_status IN
        <foreach collection="list" index="index" separator="," open="(" close=")" item="item">
            #{item.code}
        </foreach>
    </update>

    <select id="selectByCondition" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM ef_async_file_record
        <where>
            <if test="condition.limitedAppIdList != null and condition.limitedAppIdList.size() > 0">
                AND app_id in
                <foreach collection="condition.limitedAppIdList" index="index" separator="," open="(" item="item"
                    close=")">
                    #{item}
                </foreach>
            </if>
            <if test="condition.downloadCode != null and condition.downloadCode != ''">
                AND executor_code = #{condition.downloadCode}
            </if>
            <if test="condition.downloadOperateBy != null and condition.downloadOperateBy != ''">
                AND operate_by = #{condition.downloadOperateBy}
            </if>
            <if test="condition.startCreateTime != null">
                AND create_time >= #{condition.startCreateTime}
            </if>
            <if test="condition.endCreateTime != null">
                AND <![CDATA[create_time < #{condition.endCreateTime}
                ]]>
            </if>
            <if test="condition.uploadStatus != null">
                AND handle_status = #{condition.uploadStatus.code}
            </if>
            <if test="condition.maxInvalidTime != null">
                AND <![CDATA[invalid_time <= #{condition.maxInvalidTime}
                ]]>
            </if>
        </where>
        ORDER BY id DESC
        <if test="condition.maxLimit != null">
            limit #{condition.maxLimit}
        </if>
    </select>

    <insert id="insertList" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ef_async_file_record(task_id,
                                             app_id,
                                             executor_code,
                                             handle_status,
                                             file_url,
                                             file_name,
                                             file_system,
                                             operate_by,
                                             operate_name,
                                             remark,
                                             notify_enable_status,
                                             notify_email,
                                             max_server_retry,
                                             current_retry,
                                             execute_param,
                                             error_msg,
                                             last_execute_time,
                                             invalid_time,
                                             download_num,
                                             version,
                                             create_time,
                                             update_time,
                                             create_by,
                                             update_by,
                                             locale)VALUES
        <foreach collection="list" item="element" index="index" separator=",">
            (#{element.taskId},
            #{element.appId},
            #{element.executorCode},
            #{element.handleStatus.code},
            #{element.fileUrl},
            #{element.fileName},
            #{element.fileSystem},
            #{element.operateBy},
            #{element.operateName},
            #{element.remark},
            #{element.notifyEnableStatus},
            #{element.notifyEmail},
            #{element.maxServerRetry},
            #{element.currentRetry},
            #{element.executeParam},
            #{element.errorMsg},
            #{element.lastExecuteTime},
            #{element.invalidTime},
            #{element.downloadNum},
            #{element.version},
            #{element.createTime},
            #{element.updateTime},
            #{element.createBy},
            #{element.updateBy},
             #{element.locale})
        </foreach>
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ef_async_file_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">
                task_id,
            </if>
            <if test="appId != null">
                app_id,
            </if>
            <if test="executorCode != null">
                executor_code,
            </if>
            <if test="handleStatus != null">
                handle_status,
            </if>
            <if test="fileUrl != null">
                file_url,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="fileSystem != null">
                file_system,
            </if>
            <if test="operateBy != null">
                operate_by,
            </if>
            <if test="operateName != null">
                operate_name,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="notifyEnableStatus != null">
                notify_enable_status,
            </if>
            <if test="notifyEmail != null">
                notify_email,
            </if>
            <if test="maxServerRetry != null">
                max_server_retry,
            </if>
            <if test="currentRetry != null">
                current_retry,
            </if>
            <if test="executeParam != null">
                execute_param,
            </if>
            <if test="errorMsg != null">
                error_msg,
            </if>
            <if test="lastExecuteTime != null">
                last_execute_time,
            </if>
            <if test="invalidTime != null">
                invalid_time,
            </if>
            <if test="downloadNum != null">
                download_num,
            </if>
            <if test="executeProcess != null">
                execute_process,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by
            </if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">
                #{taskId},
            </if>
            <if test="appId != null">
                #{appId},
            </if>
            <if test="executorCode != null">
                #{executorCode},
            </if>
            <if test="handleStatus != null">
                #{handleStatus.code},
            </if>
            <if test="fileUrl != null">
                #{fileUrl},
            </if>
            <if test="fileName != null">
                #{fileName},
            </if>
            <if test="fileSystem != null">
                #{fileSystem},
            </if>
            <if test="operateBy != null">
                #{operateBy},
            </if>
            <if test="operateName != null">
                #{operateName},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
            <if test="notifyEnableStatus != null">
                #{notifyEnableStatus},
            </if>
            <if test="notifyEmail != null">
                #{notifyEmail},
            </if>
            <if test="maxServerRetry != null">
                #{maxServerRetry},
            </if>
            <if test="currentRetry != null">
                #{currentRetry},
            </if>
            <if test="executeParam != null">
                #{executeParam},
            </if>
            <if test="errorMsg != null">
                #{errorMsg},
            </if>
            <if test="lastExecuteTime != null">
                #{lastExecuteTime},
            </if>
            <if test="invalidTime != null">
                #{invalidTime},
            </if>
            <if test="downloadNum != null">
                #{downloadNum},
            </if>
            <if test="executeProcess != null">
                #{executeProcess},
            </if>
            <if test="version != null">
                #{version},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="updateBy != null">
                #{updateBy}
            </if>
        </trim>
    </insert>

    <!--    失效-->
    <update id="refreshUploadStatus">
        update ef_async_file_record
        set handle_status = #{tagUploadStatus.code},
            update_by     = #{updateBy}
        where id = #{id}
          AND handle_status = #{oriUploadStatus.code}
    </update>

    <!--    下载记录-->
    <update id="download">
        update ef_async_file_record
        set download_num = download_num + 1
        where id = #{id}
          and handle_status = #{uploadStatus}
    </update>

    <select id="listByTaskIdAndStatus" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ef_async_file_record
        where handle_status = #{uploadStatus.code}
          and task_id = #{downloadTaskId}
        order by update_time desc
            limit #{offset}
    </select>

    <update id="resetExecuteProcess">
        update ef_async_file_record
        set execute_process = 0
        where id = #{id}
    </update>

    <update id="refreshExecuteProcess">
        update ef_async_file_record
        set execute_process = #{executeProcess},
            handle_status   = #{nextUploadStatus.code}
        where id = #{id}
          and <![CDATA[execute_process <= #{executeProcess}
        ]]>
    </update>

    <select id="getLocale" resultType="java.lang.String">
        select locale from ef_async_download_record where id = #{registerId}
    </select>

</mapper>